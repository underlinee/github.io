---
layout: post
title:  "이펙티브 SQL - 데이터 필터링과 검색"
date:   2018-03-26 00:01:59
categories: DevBook
tags:	이펙티브SQL sql Frustrated_Join BETWEEN sargable
---

## 일치하지 않거나 누락된 레코드를 찾아내자
SQL을 사용해 데이터베이스에 없는 데이터를 조회할 때도 종종  있다. NOT IN 연산자는 이해하기 쉽지만 일반적으로 효율적인 접근은 아니다. NOT EXISTS 연산자를 사용하거나, Frustrated Join을 사용하자. NOT EXISTS와 Frustrated Join 중 더 효율적인 것은 DBMS에 따라 다르다. DBMS 쿼리 분석기로 최선의 방법을 찾아내자. 
```
SELECT p.ProductNumber, p.ProductName 
FROM Products AS p LEFT JOIN Order_Details AS od
ON p.ProductNumber = od.ProductNumber
WHERE od.ProductNumber IS NULL;
```

<br/>

## 날짜와 시간을 모두 포함하는 컬럼에서 날자 범위를 올바르게 검색하는 방법을 알자
언어 설정이나 날짜 형식에 따라 같은 값이 다른 날짜로 해석될 때가 있다. 이런 문제를 회피하려면 묵시적 날짜 변환 기능에 의존하지 않고 명시적으로 날짜 변환 함수를 사용하는 것이 좋다. 또 한가지 주의할 점은 BETWEEN이 포괄적 연산자라는 것이다. 이때 가능한 정확히 시간을 명시할 수도 있지만, DBMS에 따라 반올림이 다르게 동작하므로 BETWEEN을 쓰지 않고 >=, <= 연산자를 쓰는 편이 낫다. 또한 사용자가 2018-03-26, 2018-03-27 까지 조회하고 싶다면 DATEADD를 사용하는 편이 좀 더 명확해질 수 있다. 
```
WHERE Date >= 
    CONVERT(datetime, @startDate, 120)
AND DATE <
    CONVERT(datetime, DATEADD(DAY, 1, @endDATE) 120);
```

<br/>

## 데이터베이스 엔진이 인덱스를 사용하도록 사거블 쿼리를 작성하자
DBMS 엔진이 인덱스를 잘 활용하려면 쿼리의 서술 논리절이 인덱스를 사용해야 하는데 이것을 사거블(Search Argument Able) 이라는 용어로 표현한다. 사거블이 되지 않는 경우가 몇가지 있기 때문에 주의해야 한다.
- WHERE 절에서 하나 이상의 필드에 대해 연산하는 함수를 사용하지 않는다. 
- WHERE 절에서 필드에 대한 수치 연산을 수행하지 않는다. 
- LIKE 연산자를 사용할 때 %문자는 검색 문자열 끝에 붙인다. %something% 은 넌사거블이다.

<br/>

<a href="http://www.aladin.co.kr/shop/wproduct.aspx?ItemId=124421253">
  <img class="book" style="width: 30%; height: 30%" src="http://image.aladin.co.kr/product/12442/12/cover/k802531656_1.jpg"/>
</a>



